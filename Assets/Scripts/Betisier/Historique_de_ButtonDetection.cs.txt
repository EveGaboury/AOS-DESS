using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.UI;
using TMPro;

public class ButtonDetection : MonoBehaviour/*, IPointerClickHandler*/
{
	[TextArea(3,10)]
	public string[] reponsesSophieQ1, reponsesSophieQ2, reponseMarieEveASophieQ1;

	[HideInInspector]
	public bool answerTheQuestion = false;

	private GameObject messengerManager;

	private string[] oneTwoThreeViveLAlgerie = new string[] {"Alpha1","Alpha2","Alpha3"};

	private Color currentColor, highlitedColor, normalColor;

	private KeyCode currentKey;

	private string currentQuestion;

	void Start ()
	{
		messengerManager = GameObject.Find ("DialogueManager");

		highlitedColor = Color.red; 

		normalColor = Color.white;
	}

	void Update()
	{
		CheckIfKeyWasPressed ();
		ActivateAndDeactivateAnswerButtons ();
	}

	public void CheckWhatQuestionIsCurrentlyDisplayed() 
	{
		if (messengerManager.GetComponent<DialogueManager>().sentences.Count == 0) 
		{
			messengerManager.GetComponent<DialogueManager> ().EndDialogue ();
//			Debug.Log ("From ButtonDetedtion(): " + messengerManager.GetComponent<DialogueTrigger>().dialogue.sentences[j]);
		}
		else if (messengerManager.GetComponent<DialogueManager>().sentences.Count  == 1) 
		{
			currentQuestion = "Q2";
			RegulateSomeShit ();
//			DetectPlayerAnswers ();
		}
		else if (messengerManager.GetComponent<DialogueManager>().sentences.Count  == 2) 
		{
			currentQuestion = "Q1";
			RegulateSomeShit (); 
//			DetectPlayerAnswers ();
		}
	}


	void CheckIfKeyWasPressed()
	{
		foreach (KeyCode pressedKey in System.Enum.GetValues(typeof(KeyCode))) 
		{
			if (Input.GetKeyDown(pressedKey))
			{
				currentKey = pressedKey;
				currentColor = highlitedColor;
				ManageButtonColor ();

				for (int j = 0; j < messengerManager.GetComponent<DialogueManager> ().listeDeBouttons.Count; j++) 
				{
					if (pressedKey.ToString() == oneTwoThreeViveLAlgerie[j])
					{
						messengerManager.GetComponent<DialogueManager> ().DisplayNextSentence ();

						if (pressedKey.ToString() == oneTwoThreeViveLAlgerie[0])
						{
							
						}
						if (pressedKey.ToString() == oneTwoThreeViveLAlgerie[1])
						{

						}
						if (pressedKey.ToString() == oneTwoThreeViveLAlgerie[2])
						{

						}
					}
				}
			}
			else if (Input.GetKeyUp(pressedKey))
			{
				currentKey = pressedKey;
				currentColor = normalColor;
				ManageButtonColor ();
			}
		}
	}

	void ManageButtonColor() 
	{
		for (int k = 0; k < 3; k++)
		{
			if (currentKey.ToString () == oneTwoThreeViveLAlgerie [k].ToString ()) 
			{
				if (messengerManager.GetComponent<DialogueManager> ().hasConversationEnded == false)
				{
					messengerManager.GetComponent<DialogueManager> ().listeDeBouttons [k].gameObject.GetComponent<Image> ().color = currentColor;
				}
				else if(messengerManager.GetComponent<DialogueManager> ().hasConversationEnded == true)
				{
					messengerManager.GetComponent<DialogueManager> ().listeDeBouttons [k].gameObject.GetComponent<Image> ().color = normalColor;
				}
			}
		}
	}

	void DetectPlayerAnswers()
	{
		for (int i = 0; i < messengerManager.GetComponent<DialogueManager>().listeDeBouttons.Count; i++)  
		{
			if (EventSystem.current.currentSelectedGameObject.gameObject.name == messengerManager.GetComponent<DialogueManager> ().listeDeBouttons [i].name)
			{
				if (EventSystem.current.currentSelectedGameObject.name == "Answer01"/* || currentKey.ToString () == oneTwoThreeViveLAlgerie[0]*/) 
				{
				Debug.Log ("From ButtonDetection() && DetectPlayerAnswers(): \n" + messengerManager.GetComponent<DialogueManager> ().listeDeBouttons [i].name + currentQuestion);
				}
				if (EventSystem.current.currentSelectedGameObject.name == "Answer02"/* || currentKey.ToString () == oneTwoThreeViveLAlgerie[1]*/) 
				{
					Debug.Log ("From ButtonDetection() && DetectPlayerAnswers():: \n" + messengerManager.GetComponent<DialogueManager> ().listeDeBouttons [i].name + currentQuestion);
				}
				if (EventSystem.current.currentSelectedGameObject.name == "Answer03"/* || currentKey.ToString () == oneTwoThreeViveLAlgerie[2]*/) 
				{
					Debug.Log ("From ButtonDetection() && DetectPlayerAnswers(): \n" + messengerManager.GetComponent<DialogueManager> ().listeDeBouttons [i].name + currentQuestion);
				}
			}
		}
	}

	void RegulateSomeShit()
	{
		messengerManager.GetComponent<DialogueManager> ().currentMarkerOfQuestions = currentQuestion;

		messengerManager.GetComponent<DialogueManager> ().UpdateNameOfButtons ();

//		DetectPlayerAnswers ();
	}

	void ActivateAndDeactivateAnswerButtons()
	{
		for (int l = 0; l < this.gameObject.GetComponent<DialogueManager>().listeDeBouttons.Count; l++) 
		{
			if (this.gameObject.GetComponent<DialogueTrigger>().conversationSwitchOn == false) 
			{
				this.gameObject.GetComponent<DialogueManager> ().listeDeBouttons [l].gameObject.GetComponent<Button> ().enabled = false;
			}
			else if(this.gameObject.GetComponent<DialogueTrigger>().conversationSwitchOn == true)
			{
				this.gameObject.GetComponent<DialogueManager> ().listeDeBouttons [l].gameObject.GetComponent<Button> ().enabled = true;
			}
		}
	}
}